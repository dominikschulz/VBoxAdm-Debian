#!/usr/bin/perl
use strict;
use warnings;

use DBI;
use Config::Std;
use Sys::Syslog;

my ( $conffile_used, @hooks, %hook, %config, );

# Valid config file locations to try
my @conffile_locations = qw(
  vboxadm.conf
  conf/vboxadm.conf
  /etc/vboxadm.conf
  /etc/postfix/vboxadm.conf
);

GetOptions(
    'sender|s=s'    => \$config{'sender'},
    'recipient|r=s' => \$config{'recipient'},
    'verbose|v+'    => \$config{'verbose'},

    # shift removes name of the option (config) and leaves the value for unshift
    # unshift prepends to the list of valid config files so it is tried first
    'config=s' => sub { shift; unshift( @conffile_locations, @_ ); },
) or &usage();

# Try all config file locations
foreach my $loc (@conffile_locations) {
    if ( -r $loc ) {
        $conffile_used = $loc;
        read_config $loc => %config;
        last;
    }
}

openlog( 'vboxadm-vacation', 'ndelay,nofatal', 'mail' );

# Determine options
my $dbhost = $config{'smtpproxy'}{'dbhost'} || $config{'default'}{'dbhost'} || 'localhost';
my $dbuser = $config{'smtpproxy'}{'dbuser'} || $config{'default'}{'dbuser'} || 'vboxadm';
my $dbpass = $config{'smtpproxy'}{'dbpass'} || $config{'default'}{'dbpass'} || 'vboxadm';
my $dbport = $config{'smtpproxy'}{'dbport'} || $config{'default'}{'dbport'} || 3306;
my $dbdb   = $config{'smtpproxy'}{'dbdb'}   || $config{'default'}{'dbdb'}   || 'vboxadm';
my $notify_interval = $config{'vacation'}{'notify_interval'} || 3600 * 24 * 7;

my $dsn = "DBI:mysql:host=$dbhost;database=$dbdb;port=$dbport;user=$dbuser;password=$dbpass";
my $dbh = DBI->connect( $dsn, undef, undef, { RaiseError => 1, } );

if ( !$dbh ) {
    syslog( 2, 'Could not connect to database with DSN $dsn - From: %s - To: %s - Exiting', $config{'sender'}, $config{'recipient'} );
    closelog();
    die("Could not connect to database with DSN $dsn");
}

# Talk UTF-8 to the database
# Prepare DB connection for utf8
$dbh->do("SET NAMES utf8");

# TODO cronjob which does this:
# - create uncreated mailboxes
# - remove deleted mailboxes
# - remove expired vacation_notify entries
my $sql = "DELETE FROM vacation_notify WHERE notified_at < NOW() - ?";
my $sth = $dbh->prepare($sql);
$sth->execute( $notify_interval * 2 );
$sth->finish();

# - remove mails marked as deleted

$dbh->disconnect();
closelog();
exit 0;
