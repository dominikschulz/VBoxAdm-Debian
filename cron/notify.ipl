#!/usr/bin/perl

use strict;
use warnings;

use DBI;
use Config::Std;
use Getopt::Long;
use Sys::Syslog;
use Template;

use VBoxAdm::Utils '@VERSION@';

my ( $conffile_used, @hooks, %hook, %config, );

# Valid config file locations to try
my @conffile_locations = qw(
  vboxadm.conf
  conf/vboxadm.conf
  /etc/vboxadm.conf
  /etc/postfix/vboxadm.conf
);

GetOptions(
    'verbose|v+' => \$config{'verbose'},

    # shift removes name of the option (config) and leaves the value for unshift
    # unshift prepends to the list of valid config files so it is tried first
    'config=s' => sub { shift; unshift( @conffile_locations, @_ ); },
) or &usage();

# Try all config file locations
foreach my $loc (@conffile_locations) {
    if ( -r $loc ) {
        $conffile_used = $loc;
        read_config $loc => %config;
        last;
    }
}

openlog( 'vboxadm-rfc-notify', 'ndelay,nofatal', 'mail' );

# Determine options
my $dbhost = $config{'default'}{'dbhost'} || 'localhost';
my $dbuser = $config{'default'}{'dbuser'} || 'vboxadm';
my $dbpass = $config{'default'}{'dbpass'} || 'vboxadm';
my $dbport = $config{'default'}{'dbport'} || 3306;
my $dbdb   = $config{'default'}{'dbdb'}   || 'vboxadm';

my $logfile = $config{'notify'}{'logfile'} || '/var/log/mail.log';

my $dsn = "DBI:mysql:host=$dbhost;database=$dbdb;port=$dbport;user=$dbuser;password=$dbpass";
my $dbh = DBI->connect( $dsn, undef, undef, { RaiseError => 1, } );

if ( !$dbh ) {
    syslog( 2, 'Could not connect to database with DSN $dsn - From: %s - To: %s - Exiting', $config{'sender'}, $config{'recipient'} );
    closelog();
    die("Could not connect to database with DSN $dsn");
}

# Talk UTF-8 to the database
# Prepare DB connection for utf8
$dbh->do("SET NAMES utf8");

my $tpl_config = {
    INCLUDE_PATH => 'tpl',
    POST_CHOMP   => 1,
};

my $tpl = Template->new($tpl_config);

if ( -f $logfile ) {
    &parse_postfix_maillog( $logfile, \%config );
}

sub parse_postfix_maillog {
    my $file   = shift;
    my $config = shift;
    print "parse_postfix_maillog - Reading file $file\n" if $config{'notify'}{'verbose'};
    if ( open( my $FH, "<", $file ) ) {
      LINE: while ( my $line = <$FH> ) {
            if ( $line =~ m/postfix\/smtpd/ && $line =~ m/NOQUEUE: reject:/ ) {
                if ( $line =~
m/postfix\/smtpd\[\d+\]: NOQUEUE: reject: RCPT from ([^[]+)\[([^]]+)\]: (\d\d\d) ([^;]+); from=<([^>]+)> to=<([^>]+)> proto=([A-Z]+) helo=<([^>]+)>/
                  )
                {
                    my ( $rdns, $ip, $smtpcode, $smtpmsg, $from, $to, $proto, $helo ) = ( $1, $2, $3, $4, $5, $6, $7, $8 );
                    if ( $from eq $to ) {
                        print "SKIPPED: SPAM - from=to\n" if $config{'notify'}{'verbose'};
                        next LINE;
                    }
                    elsif ( $smtpmsg =~ m/Greylisted/ ) {
                        print "SKIPPED: GREYLISTED\n" if $config{'notify'}{'verbose'};
                        next LINE;
                    }
                    elsif ( $from =~ m/@(yahoo|gmail|microsoft|hotmail|msn|live|aim|rolex|blizzard|gmx|web)\./ ) {
                        print "SKIPPED: SPAM from well-known domain\n" if $config{'notify'}{'verbose'};
                        next LINE;
                    }

                    my $vars = {};

                    print "REJECT - RDNS: $rdns - IP: $ip - SMTP-Code: $smtpcode - SMTP-Msg: $smtpmsg - From: $from - To: $to - Proto: $proto - Helo: $helo\n"
                      if $config{'notify'}{'verbose'};

                    $vars->{'to'}            = $to;
                    $vars->{'from'}          = $from;
                    $vars->{'rdns'}          = $rdns;
                    $vars->{'ip'}            = $ip;
                    $vars->{'system_domain'} = $config{'default'}{'domain'};

                    my $from_domain;
                    if ( $from =~ m/@(.*)$/ ) {
                        $from_domain = $1;
                        $vars->{'from_domain'} = $from_domain;
                    }

                    if ( &is_notified( $dbh, 'postmaster@' . $from_domain ) ) {
                        print "SKIPPED: This postmaster (postmaster\@$from_domain) was already notified.\n" if $config{'notify'}{'verbose'};
                        next LINE;
                    }

                    if ( &VBoxAdm::Utils::is_local_domain( $dbh, $from_domain ) ) {
                        print "SKIPPED: Forged localdomain in sender ($from_domain may not be a local domain)!\n" if $config{'notify'}{'verbose'};
                        next LINE;
                    }

                    if ( !&VBoxAdm::Utils::is_local_mailbox( $dbh, $to ) ) {
                        print "SKIPPED: Invalid recipient ($to is no local mailbox)!\n" if $config{'notify'}{'verbose'};
                        next LINE;
                    }

                    # msg: Client host rejected: cannot find your hostname -> no RDNS found, notify about missing RDNS
                    if ( $smtpmsg =~ m/Client host rejected: cannot find your hostname/ ) {
                        print "WOULD Handle missing RDNS and send report to $from, $to, postmaster\@$from_domain.\n" if $config{'notify'}{'verbose'};
                        $vars->{'is_rdns'} = 1;
                    }

                    # msg: Helo command rejected: Host not found -> helo does not resolve to valid IP, notify about invalid helo
                    if ( $smtpmsg =~ m/Helo command rejected: Host not found/ ) {
                        print "WOULD Handle invalid HELO and send report to $from, $to, postmaster\@$from_domain.\n" if $config{'notify'}{'verbose'};
                        $vars->{'is_helo'} = 1;
                    }

                    if ( $vars->{'is_rdns'} || $vars->{'is_helo'} ) {
                        my $postmaster_msg;
                        $tpl->process( 'rfc-notify-postmaster.tpl', $vars, \$postmaster_msg );
                        my $emsg = '';
                        $emsg .= "Subject: MISCONFIGURED MAIL-SYSTEM NOTIFICATION\r\n";
                        $emsg .= "Auto-Submitted: auto-generated\r\n";
                        $emsg .= "From: Postmaster <postmaster\@" . $config{'default'}{'domain'} . ">\r\n";
                        $emsg .= "To: <postmaster\@$from_domain>\r\n";
                        $emsg .= "\r\n";
                        $emsg .= $postmaster_msg;

                        if ( $config{'notify'}{'dry'} ) {
                            print "XXX - Would send message to POSTMASTER:\n" . $emsg . "\n" if $config{'notify'}{'verbose'};
                        }
                        else {
                            &VBoxAdm::Utils::sendmail( 'postmaster@' . $config{'default'}{'domain'}, $emsg );
                        }

                        my $recipient_msg;
                        $tpl->process( 'rfc-notify-recipient.tpl', $vars, \$recipient_msg );
                        $emsg = '';
                        $emsg .= "Subject: MISCONFIGURED MAIL-SYSTEM NOTIFICATION\r\n";
                        $emsg .= "Auto-Submitted: auto-generated\r\n";
                        $emsg .= "From: Postmaster <postmaster\@" . $config{'default'}{'domain'} . ">\r\n";
                        $emsg .= "To: <$to>\r\n";
                        $emsg .= "\r\n";
                        $emsg .= $recipient_msg;

                        if ( $config{'notify'}{'dry'} ) {
                            print "XXX - Would send message to RECIPIENT:\n" . $emsg . "\n" if $config{'notify'}{'verbose'};
                        }
                        else {
                            &VBoxAdm::Utils::sendmail( 'postmaster@' . $config{'default'}{'domain'}, $emsg );
                        }

                        my $sender_msg;
                        $tpl->process( 'rfc-notify-sender.tpl', $vars, \$sender_msg );
                        $emsg = '';
                        $emsg .= "Subject: MISCONFIGURED MAIL-SYSTEM NOTIFICATION\r\n";
                        $emsg .= "Auto-Submitted: auto-generated\r\n";
                        $emsg .= "From: Postmaster <postmaster\@" . $config{'default'}{'domain'} . ">\r\n";
                        $emsg .= "To: <$from>\r\n";
                        $emsg .= "\r\n";
                        $emsg .= $sender_msg;

                        if ( $config{'notify'}{'dry'} ) {
                            print "XXX - Would send message to SENDER:\n" . $emsg . "\n" if $config{'notify'}{'verbose'};
                        }
                        else {
                            &VBoxAdm::Utils::sendmail( 'postmaster@' . $config{'default'}{'domain'}, $emsg );
                        }

                        if ( !$config{'notify'}{'dry'} ) {
                            &set_notified( $dbh, 'postmaster@' . $from_domain );
                        }
                    }
                    else {
                        print "ERROR Unknown Cause: $smtpmsg\n" if $config{'notify'}{'verbose'};
                    }
                }
            }
        }
        close($FH);
    }
}
$dbh->disconnect();
closelog();
exit 0;

sub set_notified {
    my $dbh   = shift;
    my $email = shift;

    my $query = "INSERT IGNORE INTO rfc_notify (email,ts) VALUES(?,NOW())";
    my $sth   = $dbh->prepare($query)
      or die( "Could not prepare Query $query: " . DBI->errstr );
    $sth->execute($email)
      or die( "Could not execute Query $query: " . $sth->errstr );
    $sth->finish();

    return 1;
}

sub is_notified {
    my $dbh   = shift;
    my $email = shift;

    my $query = "SELECT COUNT(*) FROM rfc_notify WHERE email = ?";
    my $sth   = $dbh->prepare($query)
      or die( "Could not prepare Query $query: " . DBI->errstr );
    $sth->execute($email)
      or die( "Could not execute Query $query: " . $sth->errstr );
    my $count = $sth->fetchrow_array();
    $sth->finish();

    return $count;
}
