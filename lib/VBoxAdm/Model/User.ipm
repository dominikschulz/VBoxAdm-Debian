package VBoxAdm::Model::User;

use Moose;
use namespace::autoclean;

use Carp;

use VBoxAdm::DB '@VERSION@';
use VBoxAdm::Utils '@VERSION@';
use VBoxAdm::SaltedHash '@VERSION@';

extends 'VBoxAdm::Model';

has 'domainadmin' => (
    'is'      => 'ro',
    'isa'     => 'Bool',
    'default' => 0,
);

has 'siteadmin' => (
    'is'      => 'ro',
    'isa'     => 'Bool',
    'default' => 0,
);

has 'local_part' => (
    'is'  => 'ro',
    'isa' => 'Str',
);

has 'domain' => (
    'is'  => 'ro',
    'isa' => 'Str',
);

has 'id' => (
    'is'  => 'ro',
    'isa' => 'Num',
);

has 'domain_id' => (
    'is'  => 'ro',
    'isa' => 'Num',
);

has 'force' => (
    'is'      => 'ro',
    'isa'     => 'Bool',
    'default' => 0,
);

has 'system_user' => (
    'is'      => 'ro',
    'isa'     => 'Bool',
    'default' => 0,
);

has 'user' => (
    'is'      => 'ro',
    'isa'     => 'Bool',
    'default' => 0,
);

around BUILDARGS => sub {
    my $orig  = shift;
    my $class = shift;

    my $arg_ref = $class->$orig(@_);

    # SystemUser is used (only) for bootstrap where no users does exist, yet.
    if ( $arg_ref->{'SystemUser'} ) {
        $arg_ref->{'domainadmin'} = 1;
        $arg_ref->{'siteadmin'}   = 1;
        $arg_ref->{'local_part'}  = 'root';
        $arg_ref->{'domain'}      = 'localhost';
        $arg_ref->{'id'}          = 0;
        $arg_ref->{'domain_id'}   = 0;
        $arg_ref->{'system_user'} = 1;
        $arg_ref->{'user'}        = 1;
    }
    elsif ( $arg_ref->{'username'} && &VBoxAdm::Utils::is_valid_address_rfc822( $arg_ref->{'username'} ) ) {
        my ( $local_part, $domain ) = split /@/, $arg_ref->{'username'};
        $arg_ref->{'local_part'} = $local_part;
        $arg_ref->{'domain'}     = $domain;
    }

    return $arg_ref;
};

sub login {
    my $self     = shift;
    my $password = shift;

    # check if login works
    my $sql =
"SELECT m.id,m.password,m.is_domainadmin,m.is_siteadmin,d.id FROM mailboxes AS m LEFT JOIN domains AS d ON m.domain_id = d.id WHERE m.local_part = ? AND d.name = ?";
    my $sth = &VBoxAdm::DB::prepexec( $self->dbh(), $sql, $self->local_part(), $self->domain() );

    if ( !$sth ) {
        $self->logger()->log( message => "Database error during query ($sql): " . $self->dbh()->errstr(), level => 'error', );
        $self->msg->push( 'error', 'Database error.' );
        return;
    }

    my ( $id, $pw, $is_da, $is_sa, $domain_id ) = $sth->fetchrow_array();
    $sth->finish();
    if ( !$self->force && !&VBoxAdm::SaltedHash::verify_pass( $password, $pw ) ) {
        $self->logger()->log( message => "Password invalid!", level => 'warning', );
        return;
    }
    $self->{'domainadmin'} = $is_da;
    $self->{'siteadmin'}   = $is_sa;
    $self->{'id'}          = $id;
    $self->{'domain_id'}   = $domain_id;
    $self->{'user'}        = 1;

    return 1;
}

sub get_name {
    my ($self) = @_;

    return $self->local_part() . '@' . $self->domain();
}

sub get_local_part {
    my ($self) = @_;

    return $self->local_part();
}

sub get_domain {
    my ($self) = @_;

    return $self->domain();
}

sub get_domain_id {
    my ($self) = @_;

    return $self->domain_id();
}

sub get_id {
    my ($self) = @_;

    return $self->id();
}

sub is_domainadmin {
    my ($self) = @_;

    return $self->domainadmin();
}

sub is_siteadmin {
    my ($self) = @_;

    return $self->siteadmin();
}

sub is_admin {
    my ($self) = @_;

    return $self->domainadmin() + $self->siteadmin();
}

sub is_user {
    my ($self) = @_;

    return $self->user();
}

no Moose;
__PACKAGE__->meta->make_immutable;

1;
__END__

=head1 NAME

VBoxAdm::Model::User - Class for Users.

=head1 VERSION

This documentation refers to VBoxAdm::Model::User version @VERSION@
built on @BUILDDATE@.

=head1 SYNOPSIS

    use VBoxAdm::Model::User;

=head1 DESCRIPTION

TODO

=head1 DEPENDENCIES

DBI.

=head1 INCOMPATIBILITIES

None known.

=head1 BUGS AND LIMITATIONS

There are no known bugs in this module.
Please report problems to Dominik Schulz (dominik.schulz@gauner.org)
Patches are welcome.

=head1 AUTHOR

Dominik Schulz (dominik.schulz@gauner.org)

=head1 LICENCE AND COPYRIGHT

Copyright (c) 2010 Dominik Schulz (dominik.schulz@gauner.org). All rights reserved.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

=cut
