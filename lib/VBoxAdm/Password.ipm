package VBoxAdm::Password;

use strict;
use warnings;

our $VERSION = '@VERSION@';

my %rep = (
    'nums'  => [ '0' .. '9' ],
    'signs' => [ '%', '$', '_', '-', '+', '*', '&', '/', '=', '!', '#' ],
    'lower' => [ 'a' .. 'z' ],
    'upper' => [ 'A' .. 'Z' ],
);
$rep{'chars'}    = [ @{ $rep{'lower'} },    @{ $rep{'upper'} } ];
$rep{'alphanum'} = [ @{ $rep{'chars'} },    @{ $rep{'nums'} } ];
$rep{'alphasym'} = [ @{ $rep{'alphanum'} }, @{ $rep{'signs'} } ];

sub pwgen {
    my $length = shift || 16;
    srand( time() );
    my $pw = join( '', map { $rep{'alphanum'}[ rand( $#{ $rep{'alphanum'} } ) ] } 0 .. $length - 1 );
    return $pw;
}

sub strength {
    my $pw       = shift;
    my $strength = 0;
    $strength += length($pw) - 8;
    $strength++ if ( $pw =~ m/[a-z]/ );         # lower case alpha
    $strength++ if ( $pw =~ m/[A-Z]/ );         # upper case alpha
    $strength++ if ( $pw =~ m/[0-9]/ );         # numbers
    $strength++ if ( $pw =~ m/[^A-Z0-9]/i );    # non-alphanums
    return $strength;
}

1;
